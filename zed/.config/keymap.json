// Zed keymap
//
// For information on binding keys, see the Zed
// documentation: https://zed.dev/docs/key-bindings
//
// To see the default key bindings run `zed: open default keymap`
// from the command palette.
// https://github.com/FlorianWoelki/.config/blob/main/zed/settings.json
[
  {
    "context": "vim_mode == insert",
    "bindings": {
      "ctrl-x ctrl-o": "editor::ShowCompletions",
      "ctrl-x ctrl-a": "assistant::InlineAssist", // zed specific
      // For showing edit prediction manually.
      "ctrl-x ctrl-c": "editor::ShowEditPrediction" // zed specific
    }
  },
  {
    "context": "ProjectPanel && not_editing",
    "bindings": {
      "s h": "workspace::ActivatePaneLeft"
    }
  },
  {
    "context": "VimControl && !menu",
    "bindings": {
      "g s": "outline::Toggle",
      "g i": "editor::ToggleCodeActions",
      "g d": "editor::OpenExcerpts",
      "g c": ["editor::ToggleComments", { "advance_downwards": false }]
    }
  },
  {
    "context": "Editor && VimControl && !VimWaiting && !menu",
    "bindings": {
      "g l": "vim::SelectNext",
      "g L": "vim::SelectPrevious",
      "g a": "editor::SelectAllMatches",
      "g shift-a": "editor::FindAllReferences",
      "g f": "project_symbols::Toggle",
      "space p e": "diagnostics::Deploy" // Zed specific
    }
  },
  {
    "context": "Editor && (vim_mode == normal || vim_mode == visual) && !VimWaiting && !menu",
    "bindings": {
      // Key-bindings for normal & visual mode

      // Open markdown preview
      "space m p": "markdown::OpenPreview",
      "space m P": "markdown::OpenPreviewToTheSide",
      // Git
      "space g h d": "editor::ToggleSelectedDiffHunks",
      "space g h r": "git::Restore"
    }
  },
  {
    "context": "Editor && vim_mode == normal && !VimWaiting && !menu",
    "bindings": {
      // Key-bindings to work only in normal mode
      "space e": "editor::Hover",

      // Buffers
      "s v": "pane::SplitRight",
      "s s": "pane::SplitDown",
      "s l": "workspace::ActivatePaneRight",
      "s h": "workspace::ActivatePaneLeft",
      "s k": "workspace::ActivatePaneUp",
      "s j": "workspace::ActivatePaneDown",
      "space h": "pane::ActivatePreviousItem",
      "space l": "pane::ActivateNextItem",
      "space c": "pane::CloseActiveItem",
      "space p f": "file_finder::Toggle",
      "space p s": "pane::DeploySearch",
      "space f": "editor::Format",
      "space m": "tab_switcher::Toggle",
      "ctrl-w l": "workspace::ToggleRightDock",
      "ctrl-w h": "workspace::ToggleLeftDock",
      "ctrl-w j": "workspace::ToggleBottomDock",

      // Error navigation
      "] e": "editor::GoToDiagnostic",
      "[ e": "editor::GoToPreviousDiagnostic",

      // Git
      "] h": "editor::GoToHunk",
      "[ h": "editor::GoToPreviousHunk"

      // YouTube Usage
      // "k": ["workspace::SendKeystrokes", "up z z"],
      // "j": ["workspace::SendKeystrokes", "down z z"]
    }
  },
  {
    "context": "Terminal",
    "use_key_equivalents": true,
    "bindings": {
      // Key-bindings for being in terminal
      "ctrl-w k": "terminal_panel::ToggleFocus"
    }
  },
  {
    "context": "EmptyPane || SharedScreen",
    "bindings": {
      // Key-bindings for empty pane
      "space p f": "file_finder::Toggle",
      "space f p": "projects::OpenRecent",
      "ctrl-w l": "workspace::ToggleRightDock"
    }
  },
  {
    "context": "Editor && vim_mode == visual && !VimWaiting && !menu",
    "bindings": {
      // visual, visual line & visual block modes
      "g c": "editor::ToggleComments"
    }
  },
  {
    "context": "Editor && vim_mode == insert",
    "bindings": {
      "j k": "vim::NormalBefore"

      // YouTube Usage
      // "j k": ["workspace::SendKeystrokes", "escape z z"]
    }
  }
  // {
  //   "context": "Editor && mode == full",
  //   "bindings": {
  //     // "cmd-shift-f": "workspace::DeploySearch",
  //     "cmd-shift-r": "editor::Rename",
  //     "cmd-shift-a": "editor::ToggleCodeActions",
  //     "cmd-shift-o": "outline::Toggle",
  //     "cmd-shift-e": "project_panel::ToggleFocus",
  //     "f12": "editor::GoToDefinition",
  //     "cmd-f12": "editor::GoToTypeDefinition",
  //     "shift-f12": "editor::FindAllReferences",
  //     "cmd-shift-i": "editor::Format",
  //     "cmd-shift-p": "command_palette::Toggle"
  //   }
  // },
  // {
  //   "context": "Editor && (mode == full || mode == auto_height) && language == Go",
  //   "bindings": {
  //     "cmd-shift-t": "editor::GoToTypeDefinition",
  //     "cmd-shift-d": "editor::GoToDefinition",
  //     "cmd-shift-r": "editor::FindAllReferences"
  //   }
  // },
  // {
  //   "context": "Editor && (mode == full || mode == auto_height) && language == Python",
  //   "bindings": {
  //     "cmd-shift-t": "editor::GoToTypeDefinition",
  //     "cmd-shift-d": "editor::GoToDefinition",
  //     "cmd-shift-r": "editor::FindAllReferences"
  //   }
  // }
  // {
  //   "context": "Workspace",
  //   "bindings": {
  //     // "shift shift": "file_finder::Toggle"
  //   }
  // },
  // {
  //   "context": "Editor && vim_mode == insert && !menu",
  //   "bindings": {
  //     // "j k": "vim::SwitchToNormalMode"
  //   }
  // }
]
